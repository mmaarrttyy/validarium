webpackJsonp([0x980c684bf03],{1129:function(n,a){n.exports={data:{postBySlug:{html:'<p>This package contains common validation functions</p>\n<h2 id="api-reference"><a href="#api-reference" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API reference</h2>\n<p><a name="module_validations"></a></p>\n<h2 id="validations"><a href="#validations" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations</h2>\n<ul>\n<li>\n<p><a href="#module_validations">validations</a></p>\n<ul>\n<li><em>number</em></li>\n<li><a href="#module_validations.hasNoWhiteSpace">.hasNoWhiteSpace</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isInteger">.isInteger</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isNegativeNumber">.isNegativeNumber</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isPositiveNumber">.isPositiveNumber</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasAgeInInterval">.hasAgeInInterval(minAge, maxAge)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasValueInInterval">.hasValueInInterval(min, max)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasValueMax">.hasValueMax(max)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasValueMin">.hasValueMin(min)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isDivisibleBy">.isDivisibleBy(divisor)</a> ⇒ <code>Object</code></li>\n<li><em>other</em></li>\n<li><a href="#module_validations.isRequired">.isRequired</a> ⇒ <code>Object</code></li>\n<li><em>string</em></li>\n<li><a href="#module_validations.hasNoSpecialSymbols">.hasNoSpecialSymbols</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasOnlyDigits">.hasOnlyDigits</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isEmail">.isEmail</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isNumber">.isNumber</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.visPhoneNumber">.visPhoneNumber</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isString">.isString</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isTrimmed">.isTrimmed</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isTrimmedLeft">.isTrimmedLeft</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isTrimmedRight">.isTrimmedRight</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isValidIban">.isValidIban</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.matches">.matches</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasDateMax">.hasDateMax(maximalDate)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasDateMin">.hasDateMin(maximalDate)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasLength">.hasLength(length)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasLengthInInterval">.hasLengthInInterval(min, max)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasLengthMax">.hasLengthMax(max)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.hasLengthMin">.hasLengthMin(min)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isNumber">.isNumber(list)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.isOneOf">.isOneOf(list)</a> ⇒ <code>Object</code></li>\n<li><a href="#module_validations.startsWith">.startsWith()</a> ⇒ <code>Object</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<p><a name="module_validations.hasNoWhiteSpace"></a></p>\n<h3 id="validationshasnowhitespace-⇒-codeobjectcode"><a href="#validationshasnowhitespace-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasNoWhiteSpace ⇒ <code>Object</code></h3>\n<p>Checks if a string contains no white space.</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasNoWhiteSpace</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasNoWhiteSpace</span><span class="token punctuation">(</span><span class="token string">"validarium"</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasNoWhiteSpace</span><span class="token punctuation">(</span><span class="token string">"vali darium"</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isInteger"></a></p>\n<h3 id="validationsisinteger-⇒-codeobjectcode"><a href="#validationsisinteger-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isInteger ⇒ <code>Object</code></h3>\n<p>Checks if the value is an integer</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">2.1</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isNegativeNumber"></a></p>\n<h3 id="validationsisnegativenumber-⇒-codeobjectcode"><a href="#validationsisnegativenumber-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isNegativeNumber ⇒ <code>Object</code></h3>\n<p>Checks if the value is a negative number</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isNegativeNumber</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isNegativeNumber</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span>\n\n<span class="token operator">></span> <span class="token function">isNegativeNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isPositiveNumber"></a></p>\n<h3 id="validationsispositivenumber-⇒-codeobjectcode"><a href="#validationsispositivenumber-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isPositiveNumber ⇒ <code>Object</code></h3>\n<p>Checks if the value is a positive number</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isPositiveNumber</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isPositiveNumber</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span>\n\n<span class="token operator">></span> <span class="token function">isPositiveNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasAgeInInterval"></a></p>\n<h3 id="validationshasageinintervalminage-maxage-⇒-codeobjectcode"><a href="#validationshasageinintervalminage-maxage-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasAgeInInterval(minAge, maxAge) ⇒ <code>Object</code></h3>\n<p>Checks if the age is in specified interval</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>minAge</td>\n<td><code>\nnumber\n</code></td>\n<td>minimal age</td>\n</tr>\n<tr>\n<td>maxAge</td>\n<td><code>\nnumber\n</code></td>\n<td>maximal age</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasAgeInInterval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasAgeInInterval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasAgeInInterval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasValueInInterval"></a></p>\n<h3 id="validationshasvalueinintervalmin-max-⇒-codeobjectcode"><a href="#validationshasvalueinintervalmin-max-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasValueInInterval(min, max) ⇒ <code>Object</code></h3>\n<p>Checks if the value has only digits</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td><code>\nnumber\n</code></td>\n<td>lower interval endpoint</td>\n</tr>\n<tr>\n<td>max</td>\n<td><code>\nnumber\n</code></td>\n<td>upper interval endpoint</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasValueInInterval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasValueInInterval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasValueInInterval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasValueMax"></a></p>\n<h3 id="validationshasvaluemaxmax-⇒-codeobjectcode"><a href="#validationshasvaluemaxmax-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasValueMax(max) ⇒ <code>Object</code></h3>\n<p>Checks if the value is lower or equal to max</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max</td>\n<td><code>\nnumber\n</code></td>\n<td>maximum value</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasValueMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasValueMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasValueMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasValueMin"></a></p>\n<h3 id="validationshasvalueminmin-⇒-codeobjectcode"><a href="#validationshasvalueminmin-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasValueMin(min) ⇒ <code>Object</code></h3>\n<p>Checks if the value is higher or equal to min</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td><code>\nnumber\n</code></td>\n<td>minimum value</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasValueMin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasValueMin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasValueMin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isDivisibleBy"></a></p>\n<h3 id="validationsisdivisiblebydivisor-⇒-codeobjectcode"><a href="#validationsisdivisiblebydivisor-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isDivisibleBy(divisor) ⇒ <code>Object</code></h3>\n<p>Checks is value is divisible by desired divisor</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: number</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>divisor</td>\n<td><code>\nnumber\n</code></td>\n<td>divisor</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isDivisibleBy</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isDivisibleBy</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isRequired"></a></p>\n<h3 id="validationsisrequired-⇒-codeobjectcode"><a href="#validationsisrequired-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isRequired ⇒ <code>Object</code></h3>\n<p>Checks if the value is present</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: other<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isRequired</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isRequired</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasNoSpecialSymbols"></a></p>\n<h3 id="validationshasnospecialsymbols-⇒-codeobjectcode"><a href="#validationshasnospecialsymbols-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasNoSpecialSymbols ⇒ <code>Object</code></h3>\n<p>Checks if the value doesn\'t contain any special symbol</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasNoSpecialSymbols</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasNoSpecialSymbols</span><span class="token punctuation">(</span><span class="token string">\'a%b\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasOnlyDigits"></a></p>\n<h3 id="validationshasonlydigits-⇒-codeobjectcode"><a href="#validationshasonlydigits-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasOnlyDigits ⇒ <code>Object</code></h3>\n<p>Checks if the value has only digits</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasOnlyDigits</span><span class="token punctuation">(</span><span class="token string">\'123\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasOnlyDigits</span><span class="token punctuation">(</span><span class="token string">\'12n3\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isEmail"></a></p>\n<h3 id="validationsisemail-⇒-codeobjectcode"><a href="#validationsisemail-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isEmail ⇒ <code>Object</code></h3>\n<p>Checks if the value is valid email</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isEmail</span><span class="token punctuation">(</span><span class="token string">\'email@postemail.em\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isEmail</span><span class="token punctuation">(</span><span class="token string">\'emailpostemail\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isNumber"></a></p>\n<h3 id="validationsisnumber-⇒-codeobjectcode"><a href="#validationsisnumber-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isNumber ⇒ <code>Object</code></h3>\n<p>Checks if the value is a number</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token string">\'3\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isNumber</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.visPhoneNumber"></a></p>\n<h3 id="validationsvisphonenumber-⇒-codeobjectcode"><a href="#validationsvisphonenumber-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.visPhoneNumber ⇒ <code>Object</code></h3>\n<p>Checks if the value is a valid phone number</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isPhoneNumber</span><span class="token punctuation">(</span><span class="token string">\'980123456\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isPhoneNumber</span><span class="token punctuation">(</span><span class="token string">\'23\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isString"></a></p>\n<h3 id="validationsisstring-⇒-codeobjectcode"><a href="#validationsisstring-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isString ⇒ <code>Object</code></h3>\n<p>Checks if value is type of string</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isString</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isString</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isString</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isTrimmed"></a></p>\n<h3 id="validationsistrimmed-⇒-codeobjectcode"><a href="#validationsistrimmed-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isTrimmed ⇒ <code>Object</code></h3>\n<p>Checkes if the string do not starts or ends with whitespaces.</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isTrimmed</span><span class="token punctuation">(</span><span class="token string">\'valid value\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isTrimmed</span><span class="token punctuation">(</span><span class="token string">\' invalid value\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span>\n\n<span class="token operator">></span> <span class="token function">isTrimmed</span><span class="token punctuation">(</span><span class="token string">\'invalid value \'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span>\n\n<span class="token operator">></span> <span class="token function">isTrimmed</span><span class="token punctuation">(</span><span class="token string">\' invalid value \'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isTrimmedLeft"></a></p>\n<h3 id="validationsistrimmedleft-⇒-codeobjectcode"><a href="#validationsistrimmedleft-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isTrimmedLeft ⇒ <code>Object</code></h3>\n<p>Checkes if the string do not starts with whitespaces.</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isTrimmedLeft</span><span class="token punctuation">(</span><span class="token string">\'valid value\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isTrimmedLeft</span><span class="token punctuation">(</span><span class="token string">\' invalid value\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isTrimmedRight"></a></p>\n<h3 id="validationsistrimmedright-⇒-codeobjectcode"><a href="#validationsistrimmedright-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isTrimmedRight ⇒ <code>Object</code></h3>\n<p>Checkes if the string do not ends with whitespaces.</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isTrimmedRight</span><span class="token punctuation">(</span><span class="token string">\'valid value\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isTrimmedRight</span><span class="token punctuation">(</span><span class="token string">\'invalid value  \'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isValidIban"></a></p>\n<h3 id="validationsisvalidiban-⇒-codeobjectcode"><a href="#validationsisvalidiban-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isValidIban ⇒ <code>Object</code></h3>\n<p>Checks if the value is a valid IBAN</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isValidIban</span><span class="token punctuation">(</span><span class="token string">\'CH4217423156868474686\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isValidIban</span><span class="token punctuation">(</span><span class="token string">\'CZ123\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.matches"></a></p>\n<h3 id="validationsmatches-⇒-codeobjectcode"><a href="#validationsmatches-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.matches ⇒ <code>Object</code></h3>\n<p>Checks if value matches the given predicate</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>\nstring\n</code></td>\n<td>predicate</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">\'/([a-z]a)/g\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'banana\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">\'/([a-z]a)/g\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'blueberry\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasDateMax"></a></p>\n<h3 id="validationshasdatemaxmaximaldate-⇒-codeobjectcode"><a href="#validationshasdatemaxmaximaldate-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasDateMax(maximalDate) ⇒ <code>Object</code></h3>\n<p>Checks if the the date is maximally the specified value</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>maximalDate</td>\n<td><code>\nstring\n</code></td>\n<td>maximum date</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasDateMax</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'2020-07-01\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasDateMax</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasDateMax</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'2032-07-02\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasDateMin"></a></p>\n<h3 id="validationshasdateminmaximaldate-⇒-codeobjectcode"><a href="#validationshasdateminmaximaldate-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasDateMin(maximalDate) ⇒ <code>Object</code></h3>\n<p>Checks if the the date is minimally the specified value</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>maximalDate</td>\n<td><code>\nstring\n</code></td>\n<td>minimal date</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasDateMin</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'2040-07-01\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasDateMin</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasDateMin</span><span class="token punctuation">(</span><span class="token string">\'2032-07-02\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'2032-07-01\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasLength"></a></p>\n<h3 id="validationshaslengthlength-⇒-codeobjectcode"><a href="#validationshaslengthlength-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasLength(length) ⇒ <code>Object</code></h3>\n<p>Checks if the value has exact length</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>length</td>\n<td><code>\nnumber\n</code></td>\n<td>desired length for value</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasLength</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'abcdef\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLength</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasLengthInInterval"></a></p>\n<h3 id="validationshaslengthinintervalmin-max-⇒-codeobjectcode"><a href="#validationshaslengthinintervalmin-max-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasLengthInInterval(min, max) ⇒ <code>Object</code></h3>\n<p>Checks if the value has length in interval</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td><code>\nnumber\n</code></td>\n<td>lower interval endpoint</td>\n</tr>\n<tr>\n<td>max</td>\n<td><code>\nnumber\n</code></td>\n<td>upper interval endpoint</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasLengthInInterval</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'abcd\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLengthInInterval</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'abcdef\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLengthInInterval</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasLengthMax"></a></p>\n<h3 id="validationshaslengthmaxmax-⇒-codeobjectcode"><a href="#validationshaslengthmaxmax-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasLengthMax(max) ⇒ <code>Object</code></h3>\n<p>Checks if the values length is lower or equal to max</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>max</td>\n<td><code>\nnumber\n</code></td>\n<td>maximum value</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasLengthMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLengthMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'ab\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLengthMax</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.hasLengthMin"></a></p>\n<h3 id="validationshaslengthminmin-⇒-codeobjectcode"><a href="#validationshaslengthminmin-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.hasLengthMin(min) ⇒ <code>Object</code></h3>\n<p>Checks if the values length is higher or equal to min</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>min</td>\n<td><code>\nnumber\n</code></td>\n<td>minimum value</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">hasLengthMin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'abc\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLengthMin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'ab\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">hasLengthMin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isNumber"></a></p>\n<h3 id="validationsisnumberlist-⇒-codeobjectcode"><a href="#validationsisnumberlist-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isNumber(list) ⇒ <code>Object</code></h3>\n<p>Checks if the value doesn\'t equal any list item</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td><code>\narray\n</code></td>\n<td>array of values</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isNotOneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'apple\'</span><span class="token punctuation">,</span> <span class="token string">\'pineapple\'</span><span class="token punctuation">,</span> <span class="token string">\'banana\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'banana\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isNotOneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'apple\'</span><span class="token punctuation">,</span> <span class="token string">\'pineapple\'</span><span class="token punctuation">,</span> <span class="token string">\'banana\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'blueberry\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.isOneOf"></a></p>\n<h3 id="validationsisoneoflist-⇒-codeobjectcode"><a href="#validationsisoneoflist-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.isOneOf(list) ⇒ <code>Object</code></h3>\n<p>Checks if the value equals any list item</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string</p>\n<table>\n<thead>\n<tr>\n<th>Param</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td><code>\narray\n</code></td>\n<td>array of values</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">isOneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'apple\'</span><span class="token punctuation">,</span> <span class="token string">\'pineapple\'</span><span class="token punctuation">,</span> <span class="token string">\'banana\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'banana\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">isOneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'apple\'</span><span class="token punctuation">,</span> <span class="token string">\'pineapple\'</span><span class="token punctuation">,</span> <span class="token string">\'banana\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'blueberry\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>\n<p><a name="module_validations.startsWith"></a></p>\n<h3 id="validationsstartswith-⇒-codeobjectcode"><a href="#validationsstartswith-%E2%87%92-codeobjectcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>validations.startsWith() ⇒ <code>Object</code></h3>\n<p>Checks if the value starts with specific string</p>\n<p><strong>Returns</strong>: <code>Object</code> - {message Object} when predicate fails or null when pass<br>\n<strong>Category</strong>: string<br>\n<strong>Example</strong></p>\n<div class="gatsby-highlight" data-language="js">\n      <pre class="language-js"><code class="language-js"><span class="token operator">></span> <span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">\'dog\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'dogo\'</span><span class="token punctuation">)</span>\n<span class="token keyword">null</span>\n\n<span class="token operator">></span> <span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">\'dog\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">\'cato\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>message Object<span class="token punctuation">}</span></code></pre>\n      </div>\n<hr>',
timeToRead:15,excerpt:"This package contains common validation functions API reference validations validations number .hasNoWhiteSpace  ⇒  Object .isInteger…",frontmatter:{title:"Validations"}},tableOfContents:{edges:[{node:{fields:{slug:"/examples",section:null},frontmatter:{title:"Examples",order:2,section:"main"}}},{node:{fields:{slug:"/api",section:null},frontmatter:{title:"API",order:3,section:"main"}}},{node:{fields:{slug:"/examples-example-1",section:"Examples"},frontmatter:{title:"Example 1",order:2,section:null}}},{node:{fields:{slug:"/landingPage/example1/",section:null},frontmatter:{title:"",order:null,section:null}}},{node:{fields:{slug:"/validarium",section:null},frontmatter:{title:"Validarium",order:1,section:"main"}}},{node:{fields:{slug:"/landingPage/example3/",section:null},frontmatter:{title:"",order:null,section:null}}},{node:{fields:{slug:"/examples-library-usage",section:"Examples"},frontmatter:{title:"Library Usage",order:1,section:null}}},{node:{fields:{slug:"/examples-example-2",section:"Examples"},frontmatter:{title:"Example 2",order:3,section:null}}},{node:{fields:{slug:"/landingPage/example2/",section:null},frontmatter:{title:"",order:null,section:null}}},{node:{fields:{slug:"/validarium-installation",section:"validarium"},frontmatter:{title:"Installation",order:3,section:null}}},{node:{fields:{slug:"/validarium-introduction",section:"validarium"},frontmatter:{title:"Introduction",order:1,section:null}}},{node:{fields:{slug:"/validarium-features",section:"validarium"},frontmatter:{title:"Features",order:2,section:null}}},{node:{fields:{slug:"/api-core",section:"api"},frontmatter:{title:"Core",order:1,section:null}}},{node:{fields:{slug:"/api-predicates",section:"api"},frontmatter:{title:"Predicates",order:3,section:null}}},{node:{fields:{slug:"/api-intl",section:"api"},frontmatter:{title:"Intl",order:4,section:null}}},{node:{fields:{slug:"/api-validations",section:"api"},frontmatter:{title:"Validations",order:2,section:null}}}]}},pathContext:{slug:"/api-validations"}}}});